{"version":3,"sources":["views/LoginView.module.scss","views/RegisterView.js"],"names":["module","exports","RegisterView","useState","bgColour","setBgColour","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","target","value","nameInputId","nanoid","emailInputId","passwordInputId","className","s","formPage","title","form","onSubmit","preventDefault","userOperations","register","autoComplete","label","labelText","input","type","placeholder","onChange","pattern","id","style","backgroundColor","onMouseEnter","onMouseLeave","disabled"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,SAAW,4BAA4B,MAAQ,yBAAyB,MAAQ,yBAAyB,UAAY,6BAA6B,MAAQ,2B,mHCoG7JC,UA9FM,WACnB,MAAgCC,mBAAS,WAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,cAEXC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GACZ,MACF,QACE,SAWAC,EAAcC,cACdC,EAAeD,cACfE,EAAkBF,cAExB,OACE,sBAAKG,UAAWC,IAAEC,SAAlB,UACE,oBAAIF,UAAWC,IAAEE,MAAjB,4BACA,uBAAMH,UAAWC,IAAEG,KAAMC,SAdR,SAACZ,GACpBA,EAAEa,iBACFhB,EAASiB,IAAeC,SAAS,CAAExB,OAAME,QAAOE,cAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KASuCoB,aAAa,MAA9D,UACE,wBAAOT,UAAWC,IAAES,MAApB,UACE,sBAAMV,UAAWC,IAAEU,UAAnB,kBACA,uBACEX,UAAWC,IAAEW,MACbC,KAAK,OACL7B,KAAK,OACLW,MAAOX,EACP8B,YAAY,SACZC,SAAUvB,EACVwB,QAAQ,yHACRb,MAAM,kcACNc,GAAIrB,OAIR,wBAAOI,UAAWC,IAAES,MAApB,UACE,sBAAMV,UAAWC,IAAEU,UAAnB,kBACA,uBACEX,UAAWC,IAAEW,MACbC,KAAK,QACL7B,KAAK,QACLW,MAAOT,EACP4B,YAAY,mBACZC,SAAUvB,EACVyB,GAAInB,OAIR,wBAAOE,UAAWC,IAAES,MAApB,UACE,sBAAMV,UAAWC,IAAEU,UAAnB,sBACA,uBACEX,UAAWC,IAAEW,MACbC,KAAK,WACL7B,KAAK,WACLW,MAAOP,EACP0B,YAAY,UACZC,SAAUvB,EACVyB,GAAIlB,OAGR,cAAC,IAAD,CACEmB,MAAO,CAAEC,gBAAgB,GAAD,OAAKrC,IAC7B+B,KAAM,SACNO,aAAc,kBAAMrC,EAAY,YAChCsC,aAAc,kBAAMtC,EAAY,YAChCuC,UAAWtC,IAASE,IAAUE,EALhC","file":"static/js/6.e660d9ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formPage\":\"LoginView_formPage__sJcem\",\"title\":\"LoginView_title__PBNoy\",\"label\":\"LoginView_label__3I1uB\",\"labelText\":\"LoginView_labelText__1I9QT\",\"input\":\"LoginView_input__3ro0P\"};","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userOperations } from \"../redux/users\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Button from \"../components/Button/Button\";\r\nimport s from \"./LoginView.module.scss\";\r\n\r\nconst RegisterView = () => {\r\n  const [bgColour, setBgColour] = useState(\"#2196f3\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userOperations.register({ name, email, password }));\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  const nameInputId = nanoid();\r\n  const emailInputId = nanoid();\r\n  const passwordInputId = nanoid();\r\n\r\n  return (\r\n    <div className={s.formPage}>\r\n      <h2 className={s.title}>Create Account</h2>\r\n      <form className={s.form} onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <label className={s.label}>\r\n          <span className={s.labelText}>Name</span>\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Adrian\"\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            id={nameInputId}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          <span className={s.labelText}>Mail</span>\r\n          <input\r\n            className={s.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"qwerty@gmail.com\"\r\n            onChange={handleChange}\r\n            id={emailInputId}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          <span className={s.labelText}>Password</span>\r\n          <input\r\n            className={s.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            placeholder=\"*******\"\r\n            onChange={handleChange}\r\n            id={passwordInputId}\r\n          />\r\n        </label>\r\n        <Button\r\n          style={{ backgroundColor: `${bgColour}` }}\r\n          type={\"submit\"}\r\n          onMouseEnter={() => setBgColour(\"#008b8b\")}\r\n          onMouseLeave={() => setBgColour(\"#2196f3\")}\r\n          disabled={!name || !email || !password}\r\n        >\r\n          Sign up\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n"],"sourceRoot":""}